// <auto-generated />
using System;
using Hotel.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Hotel.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241226072333_up-contact")]
    partial class upcontact
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Hotel.Data.Entities.AppAmenity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<int>("IdHotel")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdHotel");

                    b.ToTable("AppAmenities");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppArticle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdCategory")
                        .HasColumnType("int");

                    b.Property<string>("Images")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Summary")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdCategory");

                    b.ToTable("AppArticles");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppArticleCate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AppArticlesCates");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppBill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasMaxLength(1024)
                        .HasColumnType("nvarchar(1024)");

                    b.Property<double>("DiscountPrice")
                        .HasColumnType("float");

                    b.Property<double>("FinalPrice")
                        .HasColumnType("float");

                    b.Property<int>("IdBooking")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<double>("RoomPrice")
                        .HasColumnType("float");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdBooking")
                        .IsUnique();

                    b.ToTable("AppBill");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppBookingRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Adult")
                        .HasColumnType("int");

                    b.Property<string>("BookingConfirm")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime?>("CheckInActual")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CheckInExpectual")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CheckOutActual")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CheckOutExpectual")
                        .HasColumnType("datetime2");

                    b.Property<string>("CheckinConfirm")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("CheckoutConfirm")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("Children")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("IdCustommer")
                        .HasColumnType("int");

                    b.Property<int>("IdRentalPrice")
                        .HasColumnType("int");

                    b.Property<int>("IdRoom")
                        .HasColumnType("int");

                    b.Property<int>("IdUser")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdCustommer");

                    b.HasIndex("IdRentalPrice");

                    b.HasIndex("IdRoom");

                    b.HasIndex("IdUser");

                    b.ToTable("AppBookingRooms");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppCommodity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("CostPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdSvcCommoCate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<decimal>("SellingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdSvcCommoCate");

                    b.ToTable("AppCommodities");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppComodityOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdBookingRoom")
                        .HasColumnType("int");

                    b.Property<int>("IdCommodities")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdBookingRoom");

                    b.HasIndex("IdCommodities");

                    b.ToTable("AppComodityOrders");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppContact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AppContacts");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppCustHotel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime?>("BirthDay")
                        .HasColumnType("datetime2");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(96)
                        .HasColumnType("nvarchar(96)");

                    b.Property<string>("Country")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("IdHotel")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Phone")
                        .HasMaxLength(16)
                        .HasColumnType("nvarchar(16)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdHotel");

                    b.ToTable("AppCustHotels");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppDateTypeWeek", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDayType")
                        .HasColumnType("int");

                    b.Property<int?>("IdHotel")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("WeekDay")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdDayType");

                    b.ToTable("AppDateTypeWeeks");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppDayType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AppDayTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ngày thường"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ngày cuối tuần"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ngày lễ"
                        });
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppFloor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("FloorNumber")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("IdHotel")
                        .HasColumnType("int");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdHotel");

                    b.ToTable("appFloors");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AppGroup");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Nhóm Quản trị hệ thống Hotel manager",
                            Name = "Hotel Manager"
                        });
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppHMS", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("IdGroup")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdGroup")
                        .IsUnique();

                    b.ToTable("AppHMS");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppHMSOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdHotel")
                        .HasColumnType("int");

                    b.Property<int>("IdPaymentMethod")
                        .HasColumnType("int");

                    b.Property<int>("IdRentalPackage")
                        .HasColumnType("int");

                    b.Property<int>("IdTime")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("TotalFee")
                        .HasColumnType("float");

                    b.Property<double>("TotalTime")
                        .HasColumnType("float");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdHotel")
                        .IsUnique();

                    b.HasIndex("IdRentalPackage");

                    b.ToTable("AppHMSOrder");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppHoliday", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDayType")
                        .HasColumnType("int");

                    b.Property<int?>("IdHotel")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("Position")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdDayType");

                    b.ToTable("AppHolidays");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppHotels", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("City")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("nvarchar(32)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("District")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("IdGroup")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdGroup")
                        .IsUnique();

                    b.ToTable("AppHotel");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdCommodity")
                        .HasColumnType("int");

                    b.Property<int?>("IdCustHotel")
                        .HasColumnType("int");

                    b.Property<int?>("IdRoomCate")
                        .HasColumnType("int");

                    b.Property<int?>("IdServices")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdCommodity");

                    b.HasIndex("IdCustHotel");

                    b.HasIndex("IdRoomCate");

                    b.HasIndex("IdServices");

                    b.ToTable("AppImages");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppIncurredFee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdBookingRoom")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdBookingRoom");

                    b.ToTable("AppIncurredFee");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppPaymentMethod", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AppPaymentMethod");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "MoMo"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "PayPal"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "VNPay"
                        });
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppPermission", b =>
                {
                    b.Property<int>("PerCode")
                        .HasColumnType("int");

                    b.Property<int>("IdGroup")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Table")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("PerCode", "IdGroup");

                    b.HasIndex("IdGroup");

                    b.ToTable("AppPermissions");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppRentalPackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccountLimit")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("IdRentalPackageCate")
                        .HasColumnType("int");

                    b.Property<int>("IdTimeOfPrice")
                        .HasColumnType("int");

                    b.Property<int?>("IdTimeOfTrial")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("RoomLimit")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("TrialTime")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UsageTraining")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("VisualReport")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("IdRentalPackageCate");

                    b.ToTable("AppRentalPackage");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppRentalPackageCate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AppRentalPackageCate");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Phiên bản dùng thử",
                            Status = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Phiên bản có phí",
                            Status = 0
                        });
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppRentalPrice", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDayType")
                        .HasColumnType("int");

                    b.Property<int>("IdRentalType")
                        .HasColumnType("int");

                    b.Property<int>("IdRoomCate")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdDayType");

                    b.HasIndex("IdRentalType");

                    b.HasIndex("IdRoomCate");

                    b.ToTable("AppRentalPrices");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppRentalType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AppRentalTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 10, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Thuê theo giờ"
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 10, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Thuê qua đêm"
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 10, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Thuê nguyên ngày"
                        });
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("IdGroup")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdGroup");

                    b.ToTable("AppRole");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Desc = "Quản trị toàn bộ hệ thống",
                            IdGroup = 1,
                            Name = "Quản trị hệ thống"
                        });
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppRolePermission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("IdGroup")
                        .HasColumnType("int");

                    b.Property<int>("IdPermission")
                        .HasColumnType("int");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdRole");

                    b.HasIndex("IdPermission", "IdGroup");

                    b.ToTable("AppRolePermissions");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppRoom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CleanStatus")
                        .HasColumnType("int");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("IdFloor")
                        .HasColumnType("int");

                    b.Property<int>("IdRoomCate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("UseStartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdFloor");

                    b.HasIndex("IdRoomCate");

                    b.ToTable("AppRooms");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppRoomCate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("EarlyCheckInFee")
                        .HasColumnType("float");

                    b.Property<int>("IdHotel")
                        .HasColumnType("int");

                    b.Property<double>("LateCheckOutFee")
                        .HasColumnType("float");

                    b.Property<int>("MaxAdult")
                        .HasColumnType("int");

                    b.Property<int>("MaxChildren")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<int>("StanderAdult")
                        .HasColumnType("int");

                    b.Property<int>("StanderChildren")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdHotel");

                    b.ToTable("AppRoomCates");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppRoomCateAmenity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAmenity")
                        .HasColumnType("int");

                    b.Property<int>("IdRoomCate")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdAmenity");

                    b.HasIndex("IdRoomCate");

                    b.ToTable("AppRoomCateAmenities");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppServices", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Desc")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("IdSvcCommocate")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Position")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdSvcCommocate");

                    b.ToTable("AppServices");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppServicesOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdBookingRoom")
                        .HasColumnType("int");

                    b.Property<int>("IdServices")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdBookingRoom");

                    b.HasIndex("IdServices");

                    b.ToTable("AppServicesOrders");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppSvcCommoCate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdHotel")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdHotel");

                    b.ToTable("AppSvcCommoCates");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppTimes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("Time")
                        .HasColumnType("int");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("AppTime");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Giờ",
                            Time = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Ngày",
                            Time = 1
                        },
                        new
                        {
                            Id = 3,
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Tháng",
                            Time = 30
                        },
                        new
                        {
                            Id = 4,
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Năm",
                            Time = 365
                        });
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppUser", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<int>("IdGroup")
                        .HasColumnType("int");

                    b.Property<int>("IdRole")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("IdGroup");

                    b.HasIndex("IdRole");

                    b.ToTable("AppUser");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Avatar = "/images/manager/avatar_default.png",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "quocduyctvn@gmail.com",
                            IdGroup = 1,
                            IdRole = 1,
                            Name = "admin1",
                            Password = "$2a$10$U/p5oUc19tnkJTarpzPnNOXalew4XFxmkf//RPX4ByUNrUKc9m5my",
                            Phone = "0901007221"
                        },
                        new
                        {
                            Id = 2,
                            Avatar = "/images/manager/avatar_default.png",
                            CreatedDate = new DateTime(2024, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "danhkieuhan135@gmail.com",
                            IdGroup = 1,
                            IdRole = 1,
                            Name = "admin2",
                            Password = "$2a$10$U/p5oUc19tnkJTarpzPnNOXalew4XFxmkf//RPX4ByUNrUKc9m5my",
                            Phone = "0945255664"
                        });
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppAmenity", b =>
                {
                    b.HasOne("Hotel.Data.Entities.AppHotels", "appHotels")
                        .WithMany("appAmenities")
                        .HasForeignKey("IdHotel")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("appHotels");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppArticle", b =>
                {
                    b.HasOne("Hotel.Data.Entities.AppArticleCate", "AppArticleCate")
                        .WithMany("AppArticles")
                        .HasForeignKey("IdCategory")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AppArticleCate");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppBill", b =>
                {
                    b.HasOne("Hotel.Data.Entities.AppBookingRoom", "appBookingRoom")
                        .WithOne("appBill")
                        .HasForeignKey("Hotel.Data.Entities.AppBill", "IdBooking")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appBookingRoom");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppBookingRoom", b =>
                {
                    b.HasOne("Hotel.Data.Entities.AppCustHotel", "appCustHotel")
                        .WithMany("appBookingRooms")
                        .HasForeignKey("IdCustommer")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Hotel.Data.Entities.AppRentalPrice", "appRentalPrice")
                        .WithMany("appBookingRooms")
                        .HasForeignKey("IdRentalPrice")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Hotel.Data.Entities.AppRoom", "appRoom")
                        .WithMany("appBookingRooms")
                        .HasForeignKey("IdRoom")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Hotel.Data.Entities.AppUser", "appUser")
                        .WithMany("appBookingRooms")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("appCustHotel");

                    b.Navigation("appRentalPrice");

                    b.Navigation("appRoom");

                    b.Navigation("appUser");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppCommodity", b =>
                {
                    b.HasOne("Hotel.Data.Entities.AppSvcCommoCate", "appSvcCommoCate")
                        .WithMany("appCommodities")
                        .HasForeignKey("IdSvcCommoCate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appSvcCommoCate");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppComodityOrder", b =>
                {
                    b.HasOne("Hotel.Data.Entities.AppBookingRoom", "appBookingRoom")
                        .WithMany("appComodityOrders")
                        .HasForeignKey("IdBookingRoom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Data.Entities.AppCommodity", "appCommodity")
                        .WithMany("appComodityOrders")
                        .HasForeignKey("IdCommodities")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appBookingRoom");

                    b.Navigation("appCommodity");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppCustHotel", b =>
                {
                    b.HasOne("Hotel.Data.Entities.AppHotels", "appHotels")
                        .WithMany("appCustHotels")
                        .HasForeignKey("IdHotel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appHotels");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppDateTypeWeek", b =>
                {
                    b.HasOne("Hotel.Data.Entities.AppDayType", "appDayType")
                        .WithMany("appDateTypeWeeks")
                        .HasForeignKey("IdDayType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appDayType");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppFloor", b =>
                {
                    b.HasOne("Hotel.Data.Entities.AppHotels", "appHotels")
                        .WithMany("appFloor")
                        .HasForeignKey("IdHotel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appHotels");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppHMS", b =>
                {
                    b.HasOne("Hotel.Data.Entities.AppGroup", "appGroup")
                        .WithOne("appHMS")
                        .HasForeignKey("Hotel.Data.Entities.AppHMS", "IdGroup")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appGroup");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppHMSOrder", b =>
                {
                    b.HasOne("Hotel.Data.Entities.AppHotels", "appHotels")
                        .WithOne("appHMSOrder")
                        .HasForeignKey("Hotel.Data.Entities.AppHMSOrder", "IdHotel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Data.Entities.AppRentalPackage", "appRentalPackage")
                        .WithMany("appHMSOrders")
                        .HasForeignKey("IdRentalPackage")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appHotels");

                    b.Navigation("appRentalPackage");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppHoliday", b =>
                {
                    b.HasOne("Hotel.Data.Entities.AppDayType", "appDayType")
                        .WithMany("appHolidays")
                        .HasForeignKey("IdDayType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appDayType");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppHotels", b =>
                {
                    b.HasOne("Hotel.Data.Entities.AppGroup", "appGroup")
                        .WithOne("appHotels")
                        .HasForeignKey("Hotel.Data.Entities.AppHotels", "IdGroup")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appGroup");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppImage", b =>
                {
                    b.HasOne("Hotel.Data.Entities.AppCommodity", "appCommodity")
                        .WithMany("appImages")
                        .HasForeignKey("IdCommodity");

                    b.HasOne("Hotel.Data.Entities.AppCustHotel", "appCustHotel")
                        .WithMany("appImages")
                        .HasForeignKey("IdCustHotel");

                    b.HasOne("Hotel.Data.Entities.AppRoomCate", "appRoomCate")
                        .WithMany("appImages")
                        .HasForeignKey("IdRoomCate");

                    b.HasOne("Hotel.Data.Entities.AppServices", "appServices")
                        .WithMany("appImages")
                        .HasForeignKey("IdServices");

                    b.Navigation("appCommodity");

                    b.Navigation("appCustHotel");

                    b.Navigation("appRoomCate");

                    b.Navigation("appServices");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppIncurredFee", b =>
                {
                    b.HasOne("Hotel.Data.Entities.AppBookingRoom", "appBookingRoom")
                        .WithMany("appIncurredFees")
                        .HasForeignKey("IdBookingRoom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appBookingRoom");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppPermission", b =>
                {
                    b.HasOne("Hotel.Data.Entities.AppGroup", "appGroup")
                        .WithMany("appPermissions")
                        .HasForeignKey("IdGroup")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appGroup");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppRentalPackage", b =>
                {
                    b.HasOne("Hotel.Data.Entities.AppRentalPackageCate", "appRentalPackageCate")
                        .WithMany("appRentalPackage")
                        .HasForeignKey("IdRentalPackageCate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appRentalPackageCate");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppRentalPrice", b =>
                {
                    b.HasOne("Hotel.Data.Entities.AppDayType", "appDayType")
                        .WithMany("appRentalPrice")
                        .HasForeignKey("IdDayType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Data.Entities.AppRentalType", "appRentalType")
                        .WithMany("appRentalPrices")
                        .HasForeignKey("IdRentalType")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Data.Entities.AppRoomCate", "appRoomCate")
                        .WithMany("appRentalPrices")
                        .HasForeignKey("IdRoomCate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appDayType");

                    b.Navigation("appRentalType");

                    b.Navigation("appRoomCate");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppRole", b =>
                {
                    b.HasOne("Hotel.Data.Entities.AppGroup", "appGroup")
                        .WithMany("appRoles")
                        .HasForeignKey("IdGroup")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appGroup");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppRolePermission", b =>
                {
                    b.HasOne("Hotel.Data.Entities.AppRole", "appRole")
                        .WithMany("appRolePers")
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Hotel.Data.Entities.AppPermission", "appPermission")
                        .WithMany("appRolePermissions")
                        .HasForeignKey("IdPermission", "IdGroup")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("appPermission");

                    b.Navigation("appRole");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppRoom", b =>
                {
                    b.HasOne("Hotel.Data.Entities.AppFloor", "appFloor")
                        .WithMany("appRooms")
                        .HasForeignKey("IdFloor")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Hotel.Data.Entities.AppRoomCate", "appRoomCate")
                        .WithMany("appRooms")
                        .HasForeignKey("IdRoomCate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appFloor");

                    b.Navigation("appRoomCate");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppRoomCate", b =>
                {
                    b.HasOne("Hotel.Data.Entities.AppHotels", "appHotels")
                        .WithMany("appRoomCates")
                        .HasForeignKey("IdHotel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appHotels");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppRoomCateAmenity", b =>
                {
                    b.HasOne("Hotel.Data.Entities.AppAmenity", "appAmenity")
                        .WithMany("appRoomCateAmenities")
                        .HasForeignKey("IdAmenity")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Data.Entities.AppRoomCate", "appRoomCate")
                        .WithMany("appRoomsCateAmenity")
                        .HasForeignKey("IdRoomCate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appAmenity");

                    b.Navigation("appRoomCate");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppServices", b =>
                {
                    b.HasOne("Hotel.Data.Entities.AppSvcCommoCate", "appSvcCommoCate")
                        .WithMany("appServices")
                        .HasForeignKey("IdSvcCommocate")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appSvcCommoCate");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppServicesOrder", b =>
                {
                    b.HasOne("Hotel.Data.Entities.AppBookingRoom", "appBookingRoom")
                        .WithMany("appServicesOrders")
                        .HasForeignKey("IdBookingRoom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Data.Entities.AppServices", "appServices")
                        .WithMany("appServicesOrders")
                        .HasForeignKey("IdServices")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appBookingRoom");

                    b.Navigation("appServices");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppSvcCommoCate", b =>
                {
                    b.HasOne("Hotel.Data.Entities.AppHotels", "appHotels")
                        .WithMany("appSvcCommoCates")
                        .HasForeignKey("IdHotel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("appHotels");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppUser", b =>
                {
                    b.HasOne("Hotel.Data.Entities.AppGroup", "appGroup")
                        .WithMany("appUsers")
                        .HasForeignKey("IdGroup")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Hotel.Data.Entities.AppRole", "appRole")
                        .WithMany("appUsers")
                        .HasForeignKey("IdRole")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("appGroup");

                    b.Navigation("appRole");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppAmenity", b =>
                {
                    b.Navigation("appRoomCateAmenities");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppArticleCate", b =>
                {
                    b.Navigation("AppArticles");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppBookingRoom", b =>
                {
                    b.Navigation("appBill")
                        .IsRequired();

                    b.Navigation("appComodityOrders");

                    b.Navigation("appIncurredFees");

                    b.Navigation("appServicesOrders");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppCommodity", b =>
                {
                    b.Navigation("appComodityOrders");

                    b.Navigation("appImages");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppCustHotel", b =>
                {
                    b.Navigation("appBookingRooms");

                    b.Navigation("appImages");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppDayType", b =>
                {
                    b.Navigation("appDateTypeWeeks");

                    b.Navigation("appHolidays");

                    b.Navigation("appRentalPrice");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppFloor", b =>
                {
                    b.Navigation("appRooms");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppGroup", b =>
                {
                    b.Navigation("appHMS")
                        .IsRequired();

                    b.Navigation("appHotels")
                        .IsRequired();

                    b.Navigation("appPermissions");

                    b.Navigation("appRoles");

                    b.Navigation("appUsers");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppHotels", b =>
                {
                    b.Navigation("appAmenities");

                    b.Navigation("appCustHotels");

                    b.Navigation("appFloor");

                    b.Navigation("appHMSOrder")
                        .IsRequired();

                    b.Navigation("appRoomCates");

                    b.Navigation("appSvcCommoCates");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppPermission", b =>
                {
                    b.Navigation("appRolePermissions");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppRentalPackage", b =>
                {
                    b.Navigation("appHMSOrders");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppRentalPackageCate", b =>
                {
                    b.Navigation("appRentalPackage");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppRentalPrice", b =>
                {
                    b.Navigation("appBookingRooms");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppRentalType", b =>
                {
                    b.Navigation("appRentalPrices");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppRole", b =>
                {
                    b.Navigation("appRolePers");

                    b.Navigation("appUsers");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppRoom", b =>
                {
                    b.Navigation("appBookingRooms");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppRoomCate", b =>
                {
                    b.Navigation("appImages");

                    b.Navigation("appRentalPrices");

                    b.Navigation("appRooms");

                    b.Navigation("appRoomsCateAmenity");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppServices", b =>
                {
                    b.Navigation("appImages");

                    b.Navigation("appServicesOrders");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppSvcCommoCate", b =>
                {
                    b.Navigation("appCommodities");

                    b.Navigation("appServices");
                });

            modelBuilder.Entity("Hotel.Data.Entities.AppUser", b =>
                {
                    b.Navigation("appBookingRooms");
                });
#pragma warning restore 612, 618
        }
    }
}
